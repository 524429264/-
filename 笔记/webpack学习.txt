1、一般使用webpack前，都要先创建一个package.json文件，使用npm init来创建
2、之后全局安装和本地安装webpack，npm install --save-dev webpack
3、在根目录下创建两个文件夹，app用来存放原始数据和将写的javascript模块，public用来存放之后供浏览器读取的文件
4、在根目录下创建一个webpack.config.js的文件，这是用来进行配置的。它同样需要导出。entry参数用来配置入口文件，output参数用来配置打包后文件的存放地方和文件名，里面有两个参数path和filename（需要注意的是冒号后面需要使用空格隔开才可以生效）
5、在package.json中对scripts对象进行相关设置：（这就可以在命令行输入npm start或npm run start，就可以进行打包）
"scripts": {
    "start": "webpack" // 修改的是这里，JSON文件不支持注释，引用时请清除
  }
6、对于代码的调试，在webpack.config.js中加上：devtool: 'eval-source-map' 表示启用source-map映射
7、webpack还可以构建本地服务器，cnpm install --save-dev webpack-dev-server
8、之后在webpack.config.js中进行配置：
devServer:{
   contentBase: "./public",  //本地服务器所加载的页面所在目录
   historyApiFallback: true,  //不跳转
   inline: true  //实时刷新
}
9、在package.json中的scripts对象中添加如下命令，用来开启本地服务器：（完成之后使用npm run server即可在本地8080端口查看结果）
"test": "echo \"Error: no test specified\" && exit 1",
"server": "webpack-dev-server --open"
10、关于Loaders需要单独安装并且需要在webpack.config.js中的modules关键字下进行配置，它的配置包括以下几个方面
test：一个用以匹配loaders所处理文件的拓展名的正则表达式（必须）

loader：loader的名称（必须）

include/exclude:手动添加必须处理的文件（文件夹）或屏蔽不需要处理的文件（文件夹）（可选）；

query：为loaders提供额外的设置选项（可选）


11、babel包的几个核心包的安装：cnpm install --save-dev babel-core babel-loader babel-preset-es2015 babel-preset-react
12、创建一个.babelrc的配置文件，进行对babel的配置

module.exports代表导出数据，